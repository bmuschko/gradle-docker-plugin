apply plugin: 'java-gradle-plugin'

sourceSets {
    functionalTest {
        groovy.srcDir file('src/functTest/groovy')
        resources.srcDir file('src/functTest/resources')
        compileClasspath += sourceSets.main.output + sourceSets.testSetup.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    mustRunAfter test
    maxParallelForks = 1

    reports {
        html.destination = project.file("$html.destination/functional")
        junitXml.destination = project.file("$junitXml.destination/functional")
    }
    testLogging {
        showStandardStreams = true
        events 'started', 'passed', 'failed'
    }
}

check.dependsOn functionalTest

dependencies {
    functionalTestCompile 'commons-lang:commons-lang:2.6'
}

gradlePlugin {
    testSourceSets sourceSets.functionalTest
}

idea.module {
    sourceSets.functionalTest.allSource.srcDirs.each {
        testSourceDirs += it
    }

    scopes.TEST.plus += [configurations.functionalTestCompile]
    scopes.TEST.plus += [configurations.functionalTestRuntime]
}

if (project.hasProperty('bootstrapDocker') && Boolean.parseBoolean(project.getProperty('bootstrapDocker'))) {
    apply from: "$rootDir/gradle/vagrant.gradle"
}
